--- installers.py.bak	2012-03-15 15:10:32.031774057 +0100
+++ installers.py	2012-03-15 15:12:45.779785334 +0100
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python2
 # Copyright (c) 2009, Willow Garage, Inc.
 # All rights reserved.
 # 
@@ -467,6 +467,52 @@
                 ret_list.append( pkg_row[0])
         return ret_list
 
+class PacmanInstaller(InstallerAPI):
+    """
+    An implementation of the InstallerAPI for use on pacman systems
+    """
+    def __init__(self,arg_dict):
+        packages = arg_dict.get("packages","")
+        if type(packages) == type("string"):
+            packages = packages.split()
+
+        self.packages = packages
+        
+    def get_packages_to_install(self):
+         return list(set(self.packages) - set(self.pacman_detect(self.packages)))
+
+    def check_presence(self):
+        return len(self.get_packages_to_install()) == 0
+
+    def generate_package_install_command(self, default_yes = False, execute = True, display = True):
+        script = '!#/bin/bash\n#no script'
+        packages_to_install = self.get_packages_to_install()
+        if not packages_to_install:
+            script =  "#!/bin/bash\n#No Packages to install"
+        script = "#!/bin/bash\n#Packages %s\nsudo pacman -S "%packages_to_install + ' '.join(packages_to_install)        
+
+        if execute:
+            return rosdep.core.create_tempfile_from_string_and_execute(script)
+        elif display:
+            print("To install packages: %s would have executed script\n{{{\n%s\n}}}"%(packages_to_install, script))
+        return False
+
+    def pacman_detect(self, pkgs):
+        """ 
+        Given a list of package, return the list of installed packages.
+        """
+        ret_list = []
+        cmd = ['pacman','-Q']
+        cmd.extend(pkgs)
+        pop = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
+        (std_out, std_err) = pop.communicate()
+        pkg_list = std_out.split('\n')
+        for pkg in pkg_list:
+            pkg_row = pkg.split()
+            if len(pkg_row) == 2 and pkg_row[0] in pkgs:
+                ret_list.append( pkg_row[0])
+        return ret_list
+
 class GentooPortageInstaller(InstallerAPI):
     """
     An implementation of the InstallerAPI for portage-based Gentoo systems
